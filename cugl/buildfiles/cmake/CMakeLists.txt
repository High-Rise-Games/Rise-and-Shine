# PROJECT CMAKE FILE
# This file is autogenerated by the creator script
cmake_minimum_required(VERSION 3.10)

# set the project name and version
project(cugl VERSION 2.2)

# specify the C++ standard
set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_STANDARD_REQUIRED True)

# Set up the directories
set(CUGL_DIR  "${PROJECT_SOURCE_DIR}/../..")
set(SDL2_DIR  "${CUGL_DIR}/sdlapp")
set(BOX2_DIR  "${CUGL_DIR}/external/box2d")
set(POLY2_DIR "${CUGL_DIR}/external/poly2tri")
set(WRTC_DIR  "${CUGL_DIR}/external/libdatachannel")
list(APPEND EXTRA_INCLUDES "${CUGL_DIR}/include")

# Link in sdl2
set(SDL2PCKG_BUILD_SHARED_LIBS OFF)
add_subdirectory("${SDL2_DIR}/buildfiles/cmake" "sdl2pckg.dir")
list(APPEND EXTRA_LIBS SDL2_pckg::SDL2_pckg-static)
list(APPEND EXTRA_INCLUDES "${SDL2_DIR}/include")


# Link in box2d
add_subdirectory(external/box2d)
list(APPEND EXTRA_LIBS box2d)
list(APPEND EXTRA_INCLUDES "${BOX2_DIR}/include")

# Link in poly2tri
add_subdirectory(external/poly2tri)
list(APPEND EXTRA_LIBS poly2tri)
list(APPEND EXTRA_INCLUDES "${POLY2_DIR}")

# Link in libdatachannel
add_subdirectory(external/libdatachannel)
list(APPEND EXTRA_LIBS datachannel)
list(APPEND EXTRA_INCLUDES "${WRTC_DIR}/include")

# Everyone EXCEPT APPLE needs some form of OpenGL
if(APPLE)
	add_definitions(-DGL_SILENCE_DEPRECATION)
    set(LINK_TO_OPENGL FALSE)
else()
    if (UNIX)
      set(OpenGL_GL_PREFERENCE "GLVND")
      find_package(GLEW REQUIRED)
    endif()
    find_package(OpenGL REQUIRED)
    set(LINK_TO_OPENGL TRUE)
endif()

# MSVC is the worst
if (MSVC)
    set(SIZEOF_VOIDP ${CMAKE_SIZEOF_VOID_P})
    if(CMAKE_SIZEOF_VOID_P EQUAL 8)
      set(ARCH_64 TRUE)
      set(PROCESSOR_ARCH "x64")
    else()
      set(ARCH_64 FALSE)
      set(PROCESSOR_ARCH "x86")
    endif()
    add_compile_options(/wd4068)
    add_compile_options(/wd4018)
    add_compile_options(/wd4244)
    add_compile_options(/wd4267)
    add_compile_options(/wd4305)
    add_compile_options(/wd4800)
    add_compile_options(/wd4996)
    add_compile_options(/wd26812)
    add_compile_options(/wd26495)
    add_definitions(-D_WINDOWS)
    add_definitions(-D_CRT_SECURE_NO_WARNINGS)
    list(APPEND EXTRA_INCLUDES "${CUGL_DIR}/buildfiles/windows/include")
    set(GLEW_LIBRARIES "${SDL2_DIR}/buildfiles/windows/sdl2/lib/${PROCESSOR_ARCH}/glew32.lib")
    set(GLEW_FOUND TRUE)
endif()

# Add the source code
file(GLOB SOURCE_FILES
  ${CUGL_DIR}/source/base/*.cpp
  ${CUGL_DIR}/source/util/*.cpp
  ${CUGL_DIR}/source/math/*.cpp
  ${CUGL_DIR}/source/math/polygon/*.cpp
  ${CUGL_DIR}/source/input/*.cpp
  ${CUGL_DIR}/source/input/gestures/*.cpp
  ${CUGL_DIR}/source/io/*.cpp
  ${CUGL_DIR}/source/assets/*.cpp
  ${CUGL_DIR}/source/audio/*.cpp
  ${CUGL_DIR}/source/audio/graph/*.cpp
  ${CUGL_DIR}/source/render/*.cpp
  ${CUGL_DIR}/source/scene2/*.cpp
  ${CUGL_DIR}/source/scene2/graph/*.cpp
  ${CUGL_DIR}/source/scene2/ui/*.cpp
  ${CUGL_DIR}/source/scene2/layout/*.cpp
  ${CUGL_DIR}/source/scene2/actions/*.cpp
  ${CUGL_DIR}/source/physics2/*.cpp
  ${CUGL_DIR}/source/net/*.cpp
  ${CUGL_DIR}/source/physics2/net/*.cpp
  ${CUGL_DIR}/source/external/*.c
  ${CUGL_DIR}/source/external/*.cpp)

# Build it all
add_library(cugl ${SOURCE_FILES})
target_link_libraries(cugl ${EXTRA_LIBS})
if (LINK_TO_OPENGL AND OPENGL_FOUND)
    target_link_libraries(cugl ${OPENGL_LIBRARIES})
endif()
if (GLEW_FOUND)
    target_link_libraries(cugl ${GLEW_LIBRARIES})
endif()
target_include_directories(cugl PUBLIC
                           "${PROJECT_BINARY_DIR}"
                            ${EXTRA_INCLUDES}
                           )
