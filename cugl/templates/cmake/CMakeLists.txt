# PROJECT CMAKE FILE
# This file is autogenerated by the creator script
cmake_minimum_required(VERSION 3.10)

# set the project name and version
project(__TARGET__ VERSION __VERSION__)

# Need all this for Linux
if (UNIX AND NOT APPLE)
  include(CheckLibraryExists)
  include(CheckIncludeFiles)
  include(CheckIncludeFile)
  include(CheckLanguage)
  include(CheckSymbolExists)
  include(CheckCSourceCompiles)
  include(CheckCSourceRuns)
  include(CheckCCompilerFlag)
  include(CheckCXXCompilerFlag)
  include(CheckStructHasMember)
  include(CMakeDependentOption)
  include(CMakePushCheckState)
  include(GNUInstallDirs)
endif()

# specify the C++ standard
set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_STANDARD_REQUIRED True)

# Set the correct directories
set(SDL2_DIR  __SDL2DIR__)
set(CUGL_DIR  __CUGLDIR__)
set(BOX2_DIR  __BOX2DIR__)
set(POLY2_DIR  __POLY2DIR__)
set(ASSET_DIR  __ASSETDIR__)
if (MSVC)
    set(CMAKE_RUNTIME_OUTPUT_DIRECTORY $<1:${CMAKE_BINARY_DIR}/install>)
else()
    set(CMAKE_RUNTIME_OUTPUT_DIRECTORY "${CMAKE_BINARY_DIR}/install")
endif()

# Link in cugl
add_subdirectory("${CUGL_DIR}/buildfiles/cmake" "cugl.dir")
list(APPEND EXTRA_LIBS cugl)
list(APPEND EXTRA_INCLUDES "${SDL2_DIR}/include")
list(APPEND EXTRA_INCLUDES "${CUGL_DIR}/include")
list(APPEND EXTRA_INCLUDES "${BOX2_DIR}/include")
list(APPEND EXTRA_INCLUDES "${POLY2_DIR}/include")
__EXTRA_INCLUDES__

# Visual Studio is such a mess
if (MSVC)
    message("TYPE is ${CMAKE_BUILD_TYPE}")
    if($<CONFIG:Debug>)
        message("DEBUG is TRUE")
    else()
        message("DEBUG is FALSE")
    endif()
    set(SIZEOF_VOIDP ${CMAKE_SIZEOF_VOID_P})
    if(CMAKE_SIZEOF_VOID_P EQUAL 8)
      set(ARCH_64 TRUE)
      set(PROCESSOR_ARCH "x64")
    else()
      set(ARCH_64 FALSE)
      set(PROCESSOR_ARCH "x86")
    endif()

    if(CMAKE_BUILD_TYPE)
        set(MSC_BUILD_TYPE ${CMAKE_BUILD_TYPE})
    else()
        set(MSC_BUILD_TYPE "Debug")
    endif()

    add_compile_options(/wd4068)
    add_compile_options(/wd4018)
    add_compile_options(/wd4244)
    add_compile_options(/wd4267)
    add_compile_options(/wd4305)
    add_compile_options(/wd4800)
    add_compile_options(/wd4996)
    add_compile_options(/wd26812)
    add_compile_options(/wd26495)
    add_definitions(-D_WINDOWS)
    add_definitions(-D_CRT_SECURE_NO_WARNINGS)
    list(APPEND EXTRA_INCLUDES "${CUGL_DIR}/templates/windows/include")
    #set(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} /NODEFAULTLIB")
endif()

if(APPLE)
	add_definitions(-DGL_SILENCE_DEPRECATION)
endif()

# Add the source code
file(GLOB SOURCE_FILES
    __SOURCELIST__)

# Build and link
add_executable(__TARGET__ ${SOURCE_FILES})
set_target_properties(
    __TARGET__
    PROPERTIES
        OUTPUT_NAME "__APPNAME__"
        SUFFIX ".exe"
)

target_link_libraries(__TARGET__ PUBLIC ${EXTRA_LIBS})
target_include_directories(__TARGET__ PUBLIC
                           "${PROJECT_BINARY_DIR}"
                            ${EXTRA_INCLUDES}
                           )

# Copy the assets to the output directory
file(GLOB ASSET_FILES "${ASSET_DIR}/*")
foreach(Asset IN LISTS ASSET_FILES)
   file(COPY ${Asset} DESTINATION "${CMAKE_BINARY_DIR}/install/")
endforeach()
file(GLOB LICENSES "${CUGL_DIR}/licenses/*txt")
foreach(license IN LISTS LICENSES)
   file(COPY ${license} DESTINATION "${CMAKE_BINARY_DIR}/install/licenses")
endforeach()
if (MSVC)
    file(GLOB DLL_FILES "${SDL2_DIR}/buildfiles/windows/dlls/${PROCESSOR_ARCH}/*")
    foreach(DLL IN LISTS DLL_FILES)
        file(COPY ${DLL} DESTINATION "${CMAKE_BINARY_DIR}/install/")
    endforeach()
endif()
